Oui, avec Deeplearning4j, vous pouvez tout faire : régression logistique, SVM, Random Forest et LSTM.
Pour la régression logistique et les réseaux de neurones (dont LSTM), Deeplearning4j est très complet.
Pour SVM et Random Forest, Deeplearning4j propose des implémentations, mais elles sont moins utilisées que celles de bibliothèques comme Smile ou Weka (qui sont plus spécialisées dans les algorithmes classiques).
En résumé :
Deeplearning4j permet de tout faire, surtout pour le deep learning (LSTM, réseaux de neurones).
Pour les algorithmes classiques (SVM, Random Forest), Smile ou Weka peuvent être plus simples à utiliser, mais Deeplearning4j reste possible.

Pour prédire la tendance boursière, le choix de l’algorithme dépend du type de données et de la complexité du problème :
Données tabulaires classiques (prix, indicateurs techniques, etc.)
Random Forest : robuste, gère bien les données bruitées, facile à interpréter.
SVM : efficace pour des données bien préparées, mais moins adapté aux séries temporelles longues.
Régression logistique : utile pour des prédictions binaires (hausse/baisse), mais limitée pour des tendances complexes.
Données séquentielles (séries temporelles, historique des prix)
LSTM (Long Short-Term Memory, réseau de neurones récurrent) : très adapté pour capturer les dépendances temporelles et les tendances sur des séries de prix.
Résumé :
Pour des données historiques et séquentielles (prévision de tendance sur plusieurs jours), LSTM est le plus adapté.
Pour des données tabulaires ou des prédictions simples (hausse/baisse à partir d’indicateurs), Random Forest ou SVM sont efficaces.
Recommandation :
Si vous avez des séries temporelles (prix sur plusieurs jours), utilisez LSTM.
Si vous avez des indicateurs techniques ou des données tabulaires, commencez par Random Forest.